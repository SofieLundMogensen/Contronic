@inherits Umbraco.Web.Macros.PartialViewMacroPage


@*
    This snippet displays a list of links of the pages immediately under the top-most page in the content tree.
    This is the home page for a standard website.
    It also highlights the current active page/section in the navigation with the css class "current".
*@
@{
    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();

    // The menu items we want are all of the children of the homepage
    // We also check if "Hide in navigation" is on in the menu, we shouldn't show hidden items
    var menuItems = homePage.Children.Where("hideInNavigation == false");
}


<nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/"><img class="img-responsive logo" src="/Content/ContronicLogo.png" /></a>

        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right">
                @* If the Url of the current page is "/" then we want to add the class "current_page_item" *@
                @* Otherwise, we set the class to null, that way it will not even be added to the
                    <li> element *@
             

                @foreach (var item in menuItems)
                {
                    @* If the Id of the item is the same as the Id of the current page then we want to add the class "current_page_item" *@
                    @* Otherwise, we set the class to null, that way it will not even be added to the
                        <li> element *@
                    <li class="@(CurrentPage.Id == item.Id ? " current_page_item":
                    null)"><a href="@item.Url">@item.Name</a></li>
                }




            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>



